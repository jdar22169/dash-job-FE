.addbar {

  padding-top: 20px;
   margin-top: 20px;
   margin-bottom: 20px;
  border: 1px solid gray;
}

.graph {
  height: 200px;
  background-color: lightgray;
  margin-bottom: 10px
}


.pane {
  height: 80px;
  padding-top:1.5em; 
  margin-bottom: 10px;
  border: 1px solid gray;
}

.pane h4 {
  padding-left: 1em;
  display: inline;
}

.sortlist ul[dnd-list],
.sortlist ul[dnd-list] > li {
	position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.sortlist ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.sortlist ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.sortlist ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.sortlist ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
/*.sortlist ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}*/


.card {
  padding: 10px;
  border: 1px solid gray;
  min-height: 55rem;
}

#jobcard h4 {
  font-size: 15px;
}
#jobcard h3 {
  font-size: 20px;
  margin-bottom: .8rem;
}

.jobinfo {
  border-bottom: 1px solid gray;
}
